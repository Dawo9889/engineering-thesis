postgresqlDependencyEnabled: false
mariadbDependencyEnabled: false
redisDependencyEnabled: true
#Instalacja redis
redis:
  auth:
    enabled: true
    password: "redis-passbolt-password"
  sentinel:
    enabled: true

# Konfiguracja Passbolt
app:
  image:
    repository: passbolt/passbolt
    tag: 5.6.0-1-pro
    pullPolicy: IfNotPresent
  database:
    kind: postgresql # Połączenie z zewnętrznym Postgresql

# Environment variables
passboltEnv:
  plain:
    APP_FULL_BASE_URL: https://passbolt.angabo.cloud
    PASSBOLT_SSL_FORCE: false
    CACHE_DEFAULT_HOST: 127.0.0.1
    PASSBOLT_REGISTRATION_PUBLIC: true
    DEBUG: true
    PASSBOLT_KEY_EMAIL: passbolt@angabo.cloud
    EMAIL_DEFAULT_FROM: no-reply@angabo.cloud
    EMAIL_DEFAULT_FROM_NAME: Passbolt
    EMAIL_TRANSPORT_DEFAULT_HOST: smtp.gmail.com
    EMAIL_TRANSPORT_DEFAULT_PORT: 587
    EMAIL_TRANSPORT_DEFAULT_TLS: true
    DATASOURCES_DEFAULT_HOST: postgres-cluster-rw.db.svc.cluster.local # Wskazanie na serwis rw bazy danych
    DATASOURCES_DEFAULT_PORT: "5432"
  secret:
    DATASOURCES_DEFAULT_DATABASE: passbolt-db
    DATASOURCES_DEFAULT_USERNAME: passbolt
    DATASOURCES_DEFAULT_PASSWORD: zaq12wsx
    CACHE_DEFAULT_PASSWORD: redis-passbolt-password
    EMAIL_TRANSPORT_DEFAULT_USERNAME: inzynierka.polsl.ha@gmail.com
    EMAIL_TRANSPORT_DEFAULT_PASSWORD: ""

# Service ustawiamy na ClusterIP i dodajemy port HTTP
service:
  type: ClusterIP
  ports:
    http:
      port: 80
      targetPort: 80
      name: http
    https:
      port: 443
      targetPort: 443
      name: https

ingress:
  enabled: true
  annotations:
    "kubernetes.io/ingress.class": "nginx"
    "cert-manager.io/cluster-issuer": "letsencrypt-cloudflare"
  hosts:
    - host: "passbolt.angabo.cloud"
      paths:
        - path: "/"
          port: http
          pathType: "ImplementationSpecific"
  tls:
    - hosts:
        - "passbolt.angabo.cloud"
        - "www.passbolt.angabo.cloud"
      existingSecret: "passbolt-tls"
livenessProbe:
  httpGet:
    port: https
    scheme: HTTPS
    path: /healthcheck/status.json
    httpHeaders:
      - name: Host
        value: passbolt.local
  initialDelaySeconds: 60   # Pod czeka 60 sekund przed pierwszym sprawdzeniem
  periodSeconds: 30         # Sprawdzenie co 30 sekund
  timeoutSeconds: 10         # Maksymalny czas oczekiwania na odpowiedź
  failureThreshold: 3       # Po 3 nieudanych próbach pod zostaje restartowany

# Repliki i skalowanie
# replicaCount: 3
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
